{"version":3,"sources":["webpack:///./node_modules/@material-ui/core/esm/internal/SwitchBase.js","webpack:///./node_modules/@material-ui/core/esm/Switch/Switch.js","webpack:///./node_modules/@material-ui/icons/esm/ArrowBack.js","webpack:///./src/pages/settings.js"],"names":["forwardRef","props","ref","autoFocus","checkedProp","checked","checkedIcon","classes","className","defaultChecked","disabledProp","disabled","icon","id","inputProps","inputRef","name","onBlur","onChange","onFocus","readOnly","required","tabIndex","type","value","other","isControlled","useRef","current","_React$useState","useState","Boolean","checkedState","setCheckedState","muiFormControl","useFormControl","hasLabelFor","createElement","IconButton","component","root","role","undefined","event","input","newChecked","target","withStyles","padding","cursor","position","opacity","width","height","top","left","margin","zIndex","_props$color","color","_props$disabled","_props$edge","edge","_props$size","size","thumb","start","edgeStart","end","edgeEnd","small","concat","capitalize","switchBase","track","theme","display","overflow","boxSizing","flexShrink","verticalAlign","marginLeft","marginRight","palette","grey","transition","transitions","create","duration","shortest","transform","colorPrimary","primary","main","backgroundColor","action","hoverOpacity","common","black","white","colorSecondary","secondary","sizeSmall","boxShadow","shadows","borderRadius","createSvgIcon","d","StyledWrapper","styled","div","Header","colors","dark","BackButtonContainer","Link","BackButton","ArrowBack","lightBlue","SettingsContainer","Row","Paper","SettingName","StyledSelect","Select","Settings","useSettings","settings","dispatch","speak","useSpeechSyntesis","to","aria-label","fontSize","settingsTransl","title","currentLanguage","language","e","actionTypes","SET_CURRENT_LANGUAGE","payload","MenuItem","languages","en","pl","voiceSynth","Tooltip","open","speechSynth","supported","notSupported","placement","enabled","TOGGLE_VOICE_ENABLED","voices","length","languageOfSpeech","selectedVoiceIndex","SET_SPEECH_SYNTH_SELECTED_VOICE_INDEX","text","voicePreview","voice","map","index","key","voiceURI"],"mappings":"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","file":"component---src-pages-settings-js-1d30506d1d1d83d390d2.js","sourcesContent":["import \"core-js/modules/es6.function.name\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport useFormControl from '../FormControl/useFormControl';\nimport withStyles from '../styles/withStyles';\nimport IconButton from '../IconButton';\nexport var styles = {\n  root: {\n    padding: 9\n  },\n  checked: {},\n  disabled: {},\n  input: {\n    cursor: 'inherit',\n    position: 'absolute',\n    opacity: 0,\n    width: '100%',\n    height: '100%',\n    top: 0,\n    left: 0,\n    margin: 0,\n    padding: 0,\n    zIndex: 1\n  }\n};\n/**\n * @ignore - internal component.\n */\n\nvar SwitchBase = React.forwardRef(function SwitchBase(props, ref) {\n  var autoFocus = props.autoFocus,\n      checkedProp = props.checked,\n      checkedIcon = props.checkedIcon,\n      classes = props.classes,\n      className = props.className,\n      defaultChecked = props.defaultChecked,\n      disabledProp = props.disabled,\n      icon = props.icon,\n      id = props.id,\n      inputProps = props.inputProps,\n      inputRef = props.inputRef,\n      name = props.name,\n      onBlur = props.onBlur,\n      onChange = props.onChange,\n      onFocus = props.onFocus,\n      readOnly = props.readOnly,\n      required = props.required,\n      tabIndex = props.tabIndex,\n      type = props.type,\n      value = props.value,\n      other = _objectWithoutProperties(props, [\"autoFocus\", \"checked\", \"checkedIcon\", \"classes\", \"className\", \"defaultChecked\", \"disabled\", \"icon\", \"id\", \"inputProps\", \"inputRef\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"readOnly\", \"required\", \"tabIndex\", \"type\", \"value\"]);\n\n  var _React$useRef = React.useRef(checkedProp != null),\n      isControlled = _React$useRef.current;\n\n  var _React$useState = React.useState(Boolean(defaultChecked)),\n      checkedState = _React$useState[0],\n      setCheckedState = _React$useState[1];\n\n  var checked = isControlled ? checkedProp : checkedState;\n  var muiFormControl = useFormControl();\n\n  var handleFocus = function handleFocus(event) {\n    if (onFocus) {\n      onFocus(event);\n    }\n\n    if (muiFormControl && muiFormControl.onFocus) {\n      muiFormControl.onFocus(event);\n    }\n  };\n\n  var handleBlur = function handleBlur(event) {\n    if (onBlur) {\n      onBlur(event);\n    }\n\n    if (muiFormControl && muiFormControl.onBlur) {\n      muiFormControl.onBlur(event);\n    }\n  };\n\n  var handleInputChange = function handleInputChange(event) {\n    var newChecked = event.target.checked;\n\n    if (!isControlled) {\n      setCheckedState(newChecked);\n    }\n\n    if (onChange) {\n      onChange(event, newChecked);\n    }\n  };\n\n  var disabled = disabledProp;\n\n  if (muiFormControl) {\n    if (typeof disabled === 'undefined') {\n      disabled = muiFormControl.disabled;\n    }\n  }\n\n  var hasLabelFor = type === 'checkbox' || type === 'radio';\n  return React.createElement(IconButton, _extends({\n    component: \"span\",\n    className: clsx(classes.root, className, checked && classes.checked, disabled && classes.disabled),\n    disabled: disabled,\n    tabIndex: null,\n    role: undefined,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    ref: ref\n  }, other), React.createElement(\"input\", _extends({\n    autoFocus: autoFocus,\n    checked: checkedProp,\n    defaultChecked: defaultChecked,\n    className: classes.input,\n    disabled: disabled,\n    id: hasLabelFor && id,\n    name: name,\n    onChange: handleInputChange,\n    readOnly: readOnly,\n    ref: inputRef,\n    required: required,\n    tabIndex: tabIndex,\n    type: type,\n    value: value\n  }, inputProps)), checked ? checkedIcon : icon);\n}); // NB: If changed, please update Checkbox, Switch and Radio\n// so that the API documentation is updated.\n\nprocess.env.NODE_ENV !== \"production\" ? SwitchBase.propTypes = {\n  /**\n   * If `true`, the `input` element will be focused during the first mount.\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the switch will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node.isRequired,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /*\n   * @ignore\n   */\n  name: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * It prevents the user from changing the value of the field\n   * (not from interacting with the field).\n   */\n  readOnly: PropTypes.bool,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * The input component prop `type`.\n   */\n  type: PropTypes.string.isRequired,\n\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'PrivateSwitchBase'\n})(SwitchBase);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\"; // @inheritedComponent IconButton\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nimport { fade } from '../styles/colorManipulator';\nimport capitalize from '../utils/capitalize';\nimport SwitchBase from '../internal/SwitchBase';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'inline-flex',\n      width: 34 + 12 * 2,\n      height: 14 + 12 * 2,\n      overflow: 'hidden',\n      padding: 12,\n      boxSizing: 'border-box',\n      position: 'relative',\n      flexShrink: 0,\n      zIndex: 0,\n      // Reset the stacking context.\n      verticalAlign: 'middle' // For correct alignment with the text.\n\n    },\n\n    /* Styles applied to the root element if `edge=\"start\"`. */\n    edgeStart: {\n      marginLeft: -8\n    },\n\n    /* Styles applied to the root element if `edge=\"end\"`. */\n    edgeEnd: {\n      marginRight: -8\n    },\n\n    /* Styles applied to the internal `SwitchBase` component's `root` class. */\n    switchBase: {\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      zIndex: 1,\n      // Render above the focus ripple.\n      color: theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[400],\n      transition: theme.transitions.create(['left', 'transform'], {\n        duration: theme.transitions.duration.shortest\n      }),\n      '&$checked': {\n        transform: 'translateX(20px)'\n      },\n      '&$disabled': {\n        color: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[800]\n      },\n      '&$checked + $track': {\n        opacity: 0.5\n      },\n      '&$disabled + $track': {\n        opacity: theme.palette.type === 'light' ? 0.12 : 0.1\n      }\n    },\n\n    /* Styles applied to the internal SwitchBase component's root element if `color=\"primary\"`. */\n    colorPrimary: {\n      '&$checked': {\n        color: theme.palette.primary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[800]\n      },\n      '&$checked + $track': {\n        backgroundColor: theme.palette.primary.main\n      },\n      '&$disabled + $track': {\n        backgroundColor: theme.palette.type === 'light' ? theme.palette.common.black : theme.palette.common.white\n      }\n    },\n\n    /* Styles applied to the internal SwitchBase component's root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      '&$checked': {\n        color: theme.palette.secondary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[800]\n      },\n      '&$checked + $track': {\n        backgroundColor: theme.palette.secondary.main\n      },\n      '&$disabled + $track': {\n        backgroundColor: theme.palette.type === 'light' ? theme.palette.common.black : theme.palette.common.white\n      }\n    },\n\n    /* Styles applied to the root element if `size=\"small\"`. */\n    sizeSmall: {\n      width: 40,\n      height: 24,\n      padding: 7,\n      '& $thumb': {\n        width: 16,\n        height: 16\n      },\n      '& $switchBase': {\n        padding: 4,\n        '&$checked': {\n          transform: 'translateX(16px)'\n        }\n      }\n    },\n\n    /* Pseudo-class applied to the internal `SwitchBase` component's `checked` class. */\n    checked: {},\n\n    /* Pseudo-class applied to the internal SwitchBase component's disabled class. */\n    disabled: {},\n\n    /* Styles applied to the internal SwitchBase component's input element. */\n    input: {\n      left: '-100%',\n      width: '300%'\n    },\n\n    /* Styles used to create the thumb passed to the internal `SwitchBase` component `icon` prop. */\n    thumb: {\n      boxShadow: theme.shadows[1],\n      backgroundColor: 'currentColor',\n      width: 20,\n      height: 20,\n      borderRadius: '50%'\n    },\n\n    /* Styles applied to the track element. */\n    track: {\n      height: '100%',\n      width: '100%',\n      borderRadius: 14 / 2,\n      zIndex: -1,\n      transition: theme.transitions.create(['opacity', 'background-color'], {\n        duration: theme.transitions.duration.shortest\n      }),\n      backgroundColor: theme.palette.type === 'light' ? theme.palette.common.black : theme.palette.common.white,\n      opacity: theme.palette.type === 'light' ? 0.38 : 0.3\n    }\n  };\n};\nvar Switch = React.forwardRef(function Switch(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'secondary' : _props$color,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$edge = props.edge,\n      edge = _props$edge === void 0 ? false : _props$edge,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"color\", \"disabled\", \"edge\", \"size\"]);\n\n  var icon = React.createElement(\"span\", {\n    className: classes.thumb\n  });\n  return React.createElement(\"span\", {\n    className: clsx(classes.root, className, {\n      start: classes.edgeStart,\n      end: classes.edgeEnd\n    }[edge], {\n      small: classes[\"size\".concat(capitalize(size))]\n    }[size])\n  }, React.createElement(SwitchBase, _extends({\n    type: \"checkbox\",\n    icon: icon,\n    checkedIcon: icon,\n    classes: {\n      root: clsx(classes.switchBase, classes[\"color\".concat(capitalize(color))]),\n      input: classes.input,\n      checked: classes.checked,\n      disabled: classes.disabled\n    },\n    ref: ref,\n    disabled: disabled\n  }, other)), React.createElement(\"span\", {\n    className: classes.track\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Switch.propTypes = {\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['primary', 'secondary', 'default']),\n\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the switch will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * If given, uses a negative margin to counteract the padding on one\n   * side (this is often helpful for aligning the left or right\n   * side of the icon with content above or below, without ruining the border\n   * size and shape).\n   */\n  edge: PropTypes.oneOf(['start', 'end', false]),\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the switch.\n   * `small` is equivalent to the dense switch styling.\n   */\n  size: PropTypes.oneOf(['small', 'medium']),\n\n  /**\n   * The input component prop `type`.\n   */\n  type: PropTypes.string,\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiSwitch'\n})(Switch);","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z\"\n}), 'ArrowBack');","import React from \"react\";\r\nimport { Link } from \"gatsby\";\r\nimport styled from \"styled-components\";\r\nimport { useSettings, actionTypes } from \"../contexts/SettingsContext\";\r\nimport {\r\n  Switch,\r\n  Paper,\r\n  IconButton,\r\n  Select,\r\n  MenuItem,\r\n  Tooltip,\r\n} from \"@material-ui/core/\";\r\nimport { ArrowBack } from \"@material-ui/icons\";\r\nimport useSpeechSyntesis from \"../utils/hooks/useSpeechSynthesis\";\r\nimport { settings as settingsTransl, voicePreview } from \"../translations\";\r\n\r\nconst StyledWrapper = styled.div`\r\n  width: 100%;\r\n  margin-top: 50px;\r\n`;\r\nconst Header = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  display: flex;\r\n  align-items: center;\r\n  height: 50px;\r\n  width: 100%;\r\n  background-color: ${({ theme }) => theme.colors.dark};\r\n  border-bottom: solid 1px ${({ theme }) => theme.colors.white};\r\n\r\n  span {\r\n    font-size: 1.6rem;\r\n  }\r\n`;\r\nconst BackButtonContainer = styled(Link)`\r\n  cursor: pointer;\r\n`;\r\nconst BackButton = styled(ArrowBack)`\r\n  color: ${({ theme }) => theme.colors.lightBlue};\r\n`;\r\nconst SettingsContainer = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\nconst Row = styled(Paper)`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  width: 100%;\r\n  max-width: 450px;\r\n  padding: 10px;\r\n`;\r\nconst SettingName = styled.div`\r\n  font-size: 1.4rem;\r\n  margin-right: 10px;\r\n`;\r\nconst StyledSelect = styled(Select)`\r\n  &&& {\r\n    font-size: 1.4rem;\r\n  }\r\n  margin-right: 5px;\r\n`;\r\n\r\nconst Settings = () => {\r\n  const { settings, dispatch } = useSettings();\r\n  const { speak } = useSpeechSyntesis();\r\n  const toggleVoiceEnabled = () => {\r\n    dispatch({\r\n      type: actionTypes.TOGGLE_VOICE_ENABLED,\r\n    });\r\n  };\r\n\r\n  const handleLanguageChange = e => {\r\n    dispatch({\r\n      type: actionTypes.SET_CURRENT_LANGUAGE,\r\n      payload: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleVoiceChange = e => {\r\n    dispatch({\r\n      type: actionTypes.SET_SPEECH_SYNTH_SELECTED_VOICE_INDEX,\r\n      payload: e.target.value,\r\n    });\r\n    speak({\r\n      text: voicePreview[settings.currentLanguage],\r\n      voice: settings.speechSynth.voices[e.target.value],\r\n    });\r\n  };\r\n\r\n  return (\r\n    <StyledWrapper>\r\n      <Header>\r\n        <BackButtonContainer to=\"/\">\r\n          <IconButton aria-label=\"back to overview\">\r\n            <BackButton fontSize=\"large\" />\r\n          </IconButton>\r\n        </BackButtonContainer>\r\n        <span>{settingsTransl.title[settings.currentLanguage]}</span>\r\n      </Header>\r\n      <SettingsContainer>\r\n        <Row>\r\n          <SettingName>\r\n            {settingsTransl.language[settings.currentLanguage]}\r\n          </SettingName>\r\n          <StyledSelect\r\n            value={settings.currentLanguage}\r\n            onChange={handleLanguageChange}\r\n          >\r\n            <MenuItem value={settings.languages.en}>English</MenuItem>\r\n            <MenuItem value={settings.languages.pl}>Polski</MenuItem>\r\n          </StyledSelect>\r\n        </Row>\r\n        <Row>\r\n          <SettingName>\r\n            {settingsTransl.voiceSynth[settings.currentLanguage]}\r\n          </SettingName>\r\n          <Tooltip\r\n            open={!settings.speechSynth.supported}\r\n            title={settingsTransl.notSupported[settings.currentLanguage]}\r\n            placement=\"left-end\"\r\n          >\r\n            <Switch\r\n              checked={settings.speechSynth.enabled}\r\n              onChange={toggleVoiceEnabled}\r\n              disabled={\r\n                !settings.speechSynth.supported ||\r\n                !settings.speechSynth.voices.length\r\n              }\r\n            />\r\n          </Tooltip>\r\n        </Row>\r\n        {settings.speechSynth.enabled &&\r\n          settings.speechSynth.voices.length > 0 && (\r\n            <Row>\r\n              <SettingName>\r\n                {settingsTransl.languageOfSpeech[settings.currentLanguage]}\r\n              </SettingName>\r\n              <StyledSelect\r\n                value={settings.speechSynth.selectedVoiceIndex}\r\n                onChange={handleVoiceChange}\r\n              >\r\n                {settings.speechSynth.voices.map((voice, index) => (\r\n                  <MenuItem key={voice.voiceURI} value={index}>\r\n                    {voice.name}\r\n                  </MenuItem>\r\n                ))}\r\n              </StyledSelect>\r\n            </Row>\r\n          )}\r\n      </SettingsContainer>\r\n    </StyledWrapper>\r\n  );\r\n};\r\n\r\nexport default Settings;\r\n"],"sourceRoot":""}