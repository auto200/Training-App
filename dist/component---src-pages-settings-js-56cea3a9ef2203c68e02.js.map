{"version":3,"sources":["webpack:///./node_modules/@material-ui/core/esm/internal/SwitchBase.js","webpack:///./node_modules/@material-ui/core/esm/Switch/Switch.js","webpack:///./node_modules/@material-ui/icons/esm/ArrowBack.js","webpack:///./src/pages/settings.js"],"names":["props","ref","autoFocus","checkedProp","checked","checkedIcon","classes","className","defaultChecked","disabledProp","disabled","icon","id","inputProps","inputRef","name","onBlur","onChange","onFocus","readOnly","required","tabIndex","type","value","other","_useControlled","useControlled","controlled","Boolean","_useControlled2","setCheckedState","muiFormControl","useFormControl","hasLabelFor","IconButton","component","root","role","undefined","event","input","newChecked","target","withStyles","padding","cursor","position","opacity","width","height","top","left","margin","zIndex","_props$color","color","_props$edge","edge","_props$size","size","thumb","edgeStart","edgeEnd","concat","capitalize","switchBase","track","theme","display","overflow","boxSizing","flexShrink","verticalAlign","marginLeft","marginRight","palette","grey","transition","transitions","create","duration","shortest","transform","colorPrimary","primary","main","backgroundColor","action","hoverOpacity","common","black","white","colorSecondary","secondary","sizeSmall","boxShadow","shadows","borderRadius","createSvgIcon","createElement","d","StyledWrapper","styled","div","Header","colors","dark","BackButtonContainer","Link","BackButton","ArrowBack","lightBlue","SettingsContainer","Row","Paper","SettingName","StyledSelect","Select","Settings","useSettings","settings","dispatch","speak","useSpeechSyntesis","title","to","aria-label","fontSize","Tooltip","open","vibrations","placement","actionTypes","TOGGLE_VIBRATIONS","window","navigator","vibrate","speechSynth","supported","enabled","TOGGLE_TTS","voices","length","selectedVoiceIndex","e","SET_SPEECH_SYNTH_SELECTED_VOICE_INDEX","payload","text","voice","map","index","MenuItem","key","voiceURI"],"mappings":"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","file":"component---src-pages-settings-js-56cea3a9ef2203c68e02.js","sourcesContent":["import \"core-js/modules/es6.function.name\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport useControlled from '../utils/useControlled';\nimport useFormControl from '../FormControl/useFormControl';\nimport withStyles from '../styles/withStyles';\nimport IconButton from '../IconButton';\nexport var styles = {\n  root: {\n    padding: 9\n  },\n  checked: {},\n  disabled: {},\n  input: {\n    cursor: 'inherit',\n    position: 'absolute',\n    opacity: 0,\n    width: '100%',\n    height: '100%',\n    top: 0,\n    left: 0,\n    margin: 0,\n    padding: 0,\n    zIndex: 1\n  }\n};\n/**\n * @ignore - internal component.\n */\n\nvar SwitchBase = React.forwardRef(function SwitchBase(props, ref) {\n  var autoFocus = props.autoFocus,\n      checkedProp = props.checked,\n      checkedIcon = props.checkedIcon,\n      classes = props.classes,\n      className = props.className,\n      defaultChecked = props.defaultChecked,\n      disabledProp = props.disabled,\n      icon = props.icon,\n      id = props.id,\n      inputProps = props.inputProps,\n      inputRef = props.inputRef,\n      name = props.name,\n      onBlur = props.onBlur,\n      onChange = props.onChange,\n      onFocus = props.onFocus,\n      readOnly = props.readOnly,\n      required = props.required,\n      tabIndex = props.tabIndex,\n      type = props.type,\n      value = props.value,\n      other = _objectWithoutProperties(props, [\"autoFocus\", \"checked\", \"checkedIcon\", \"classes\", \"className\", \"defaultChecked\", \"disabled\", \"icon\", \"id\", \"inputProps\", \"inputRef\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"readOnly\", \"required\", \"tabIndex\", \"type\", \"value\"]);\n\n  var _useControlled = useControlled({\n    controlled: checkedProp,\n    \"default\": Boolean(defaultChecked),\n    name: 'SwitchBase'\n  }),\n      _useControlled2 = _slicedToArray(_useControlled, 2),\n      checked = _useControlled2[0],\n      setCheckedState = _useControlled2[1];\n\n  var muiFormControl = useFormControl();\n\n  var handleFocus = function handleFocus(event) {\n    if (onFocus) {\n      onFocus(event);\n    }\n\n    if (muiFormControl && muiFormControl.onFocus) {\n      muiFormControl.onFocus(event);\n    }\n  };\n\n  var handleBlur = function handleBlur(event) {\n    if (onBlur) {\n      onBlur(event);\n    }\n\n    if (muiFormControl && muiFormControl.onBlur) {\n      muiFormControl.onBlur(event);\n    }\n  };\n\n  var handleInputChange = function handleInputChange(event) {\n    var newChecked = event.target.checked;\n    setCheckedState(newChecked);\n\n    if (onChange) {\n      onChange(event, newChecked);\n    }\n  };\n\n  var disabled = disabledProp;\n\n  if (muiFormControl) {\n    if (typeof disabled === 'undefined') {\n      disabled = muiFormControl.disabled;\n    }\n  }\n\n  var hasLabelFor = type === 'checkbox' || type === 'radio';\n  return /*#__PURE__*/React.createElement(IconButton, _extends({\n    component: \"span\",\n    className: clsx(classes.root, className, checked && classes.checked, disabled && classes.disabled),\n    disabled: disabled,\n    tabIndex: null,\n    role: undefined,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(\"input\", _extends({\n    autoFocus: autoFocus,\n    checked: checkedProp,\n    defaultChecked: defaultChecked,\n    className: classes.input,\n    disabled: disabled,\n    id: hasLabelFor && id,\n    name: name,\n    onChange: handleInputChange,\n    readOnly: readOnly,\n    ref: inputRef,\n    required: required,\n    tabIndex: tabIndex,\n    type: type,\n    value: value\n  }, inputProps)), checked ? checkedIcon : icon);\n}); // NB: If changed, please update Checkbox, Switch and Radio\n// so that the API documentation is updated.\n\nprocess.env.NODE_ENV !== \"production\" ? SwitchBase.propTypes = {\n  /**\n   * If `true`, the `input` element will be focused during the first mount.\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the switch will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node.isRequired,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /*\n   * @ignore\n   */\n  name: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * It prevents the user from changing the value of the field\n   * (not from interacting with the field).\n   */\n  readOnly: PropTypes.bool,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * The input component prop `type`.\n   */\n  type: PropTypes.string.isRequired,\n\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'PrivateSwitchBase'\n})(SwitchBase);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\"; // @inheritedComponent IconButton\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nimport { fade } from '../styles/colorManipulator';\nimport capitalize from '../utils/capitalize';\nimport SwitchBase from '../internal/SwitchBase';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'inline-flex',\n      width: 34 + 12 * 2,\n      height: 14 + 12 * 2,\n      overflow: 'hidden',\n      padding: 12,\n      boxSizing: 'border-box',\n      position: 'relative',\n      flexShrink: 0,\n      zIndex: 0,\n      // Reset the stacking context.\n      verticalAlign: 'middle' // For correct alignment with the text.\n\n    },\n\n    /* Styles applied to the root element if `edge=\"start\"`. */\n    edgeStart: {\n      marginLeft: -8\n    },\n\n    /* Styles applied to the root element if `edge=\"end\"`. */\n    edgeEnd: {\n      marginRight: -8\n    },\n\n    /* Styles applied to the internal `SwitchBase` component's `root` class. */\n    switchBase: {\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      zIndex: 1,\n      // Render above the focus ripple.\n      color: theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[400],\n      transition: theme.transitions.create(['left', 'transform'], {\n        duration: theme.transitions.duration.shortest\n      }),\n      '&$checked': {\n        transform: 'translateX(20px)'\n      },\n      '&$disabled': {\n        color: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[800]\n      },\n      '&$checked + $track': {\n        opacity: 0.5\n      },\n      '&$disabled + $track': {\n        opacity: theme.palette.type === 'light' ? 0.12 : 0.1\n      }\n    },\n\n    /* Styles applied to the internal SwitchBase component's root element if `color=\"primary\"`. */\n    colorPrimary: {\n      '&$checked': {\n        color: theme.palette.primary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[800]\n      },\n      '&$checked + $track': {\n        backgroundColor: theme.palette.primary.main\n      },\n      '&$disabled + $track': {\n        backgroundColor: theme.palette.type === 'light' ? theme.palette.common.black : theme.palette.common.white\n      }\n    },\n\n    /* Styles applied to the internal SwitchBase component's root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      '&$checked': {\n        color: theme.palette.secondary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[800]\n      },\n      '&$checked + $track': {\n        backgroundColor: theme.palette.secondary.main\n      },\n      '&$disabled + $track': {\n        backgroundColor: theme.palette.type === 'light' ? theme.palette.common.black : theme.palette.common.white\n      }\n    },\n\n    /* Styles applied to the root element if `size=\"small\"`. */\n    sizeSmall: {\n      width: 40,\n      height: 24,\n      padding: 7,\n      '& $thumb': {\n        width: 16,\n        height: 16\n      },\n      '& $switchBase': {\n        padding: 4,\n        '&$checked': {\n          transform: 'translateX(16px)'\n        }\n      }\n    },\n\n    /* Pseudo-class applied to the internal `SwitchBase` component's `checked` class. */\n    checked: {},\n\n    /* Pseudo-class applied to the internal SwitchBase component's disabled class. */\n    disabled: {},\n\n    /* Styles applied to the internal SwitchBase component's input element. */\n    input: {\n      left: '-100%',\n      width: '300%'\n    },\n\n    /* Styles used to create the thumb passed to the internal `SwitchBase` component `icon` prop. */\n    thumb: {\n      boxShadow: theme.shadows[1],\n      backgroundColor: 'currentColor',\n      width: 20,\n      height: 20,\n      borderRadius: '50%'\n    },\n\n    /* Styles applied to the track element. */\n    track: {\n      height: '100%',\n      width: '100%',\n      borderRadius: 14 / 2,\n      zIndex: -1,\n      transition: theme.transitions.create(['opacity', 'background-color'], {\n        duration: theme.transitions.duration.shortest\n      }),\n      backgroundColor: theme.palette.type === 'light' ? theme.palette.common.black : theme.palette.common.white,\n      opacity: theme.palette.type === 'light' ? 0.38 : 0.3\n    }\n  };\n};\nvar Switch = React.forwardRef(function Switch(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'secondary' : _props$color,\n      _props$edge = props.edge,\n      edge = _props$edge === void 0 ? false : _props$edge,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"color\", \"edge\", \"size\"]);\n\n  var icon = /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.thumb\n  });\n  return /*#__PURE__*/React.createElement(\"span\", {\n    className: clsx(classes.root, className, {\n      'start': classes.edgeStart,\n      'end': classes.edgeEnd\n    }[edge], size === \"small\" && classes[\"size\".concat(capitalize(size))])\n  }, /*#__PURE__*/React.createElement(SwitchBase, _extends({\n    type: \"checkbox\",\n    icon: icon,\n    checkedIcon: icon,\n    classes: {\n      root: clsx(classes.switchBase, classes[\"color\".concat(capitalize(color))]),\n      input: classes.input,\n      checked: classes.checked,\n      disabled: classes.disabled\n    },\n    ref: ref\n  }, other)), /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.track\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Switch.propTypes = {\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['primary', 'secondary', 'default']),\n\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the switch will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * If given, uses a negative margin to counteract the padding on one\n   * side (this is often helpful for aligning the left or right\n   * side of the icon with content above or below, without ruining the border\n   * size and shape).\n   */\n  edge: PropTypes.oneOf(['start', 'end', false]),\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the switch.\n   * `small` is equivalent to the dense switch styling.\n   */\n  size: PropTypes.oneOf(['small', 'medium']),\n\n  /**\n   * The input component prop `type`.\n   */\n  type: PropTypes.string,\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiSwitch'\n})(Switch);","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z\"\n}), 'ArrowBack');","import React from \"react\";\r\nimport { Link } from \"gatsby\";\r\nimport styled from \"styled-components\";\r\nimport SEO from \"../components/Seo\";\r\nimport { useSettings, actionTypes } from \"../contexts/SettingsContext\";\r\nimport {\r\n  Switch,\r\n  Paper,\r\n  IconButton,\r\n  Select,\r\n  MenuItem,\r\n  Tooltip,\r\n} from \"@material-ui/core/\";\r\nimport { ArrowBack } from \"@material-ui/icons\";\r\nimport useSpeechSyntesis from \"../utils/hooks/useSpeechSynthesis\";\r\n\r\nconst StyledWrapper = styled.div`\r\n  width: 100%;\r\n  margin-top: 50px;\r\n`;\r\nconst Header = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  display: flex;\r\n  align-items: center;\r\n  height: 50px;\r\n  width: 100%;\r\n  background-color: ${({ theme }) => theme.colors.dark};\r\n  border-bottom: solid 1px ${({ theme }) => theme.colors.white};\r\n\r\n  span {\r\n    font-size: 1.6rem;\r\n  }\r\n`;\r\nconst BackButtonContainer = styled(Link)`\r\n  cursor: pointer;\r\n`;\r\nconst BackButton = styled(ArrowBack)`\r\n  color: ${({ theme }) => theme.colors.lightBlue};\r\n`;\r\nconst SettingsContainer = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\nconst Row = styled(Paper)`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  width: 100%;\r\n  max-width: 550px;\r\n  padding: 10px;\r\n`;\r\nconst SettingName = styled.div`\r\n  font-size: 1.4rem;\r\n  margin-right: 10px;\r\n`;\r\nconst StyledSelect = styled(Select)`\r\n  &&& {\r\n    font-size: 1.4rem;\r\n  }\r\n  margin-right: 5px;\r\n`;\r\n\r\nconst Settings = () => {\r\n  const { settings, dispatch } = useSettings();\r\n  const { speak } = useSpeechSyntesis();\r\n  const toggleTTS = () => {\r\n    dispatch({\r\n      type: actionTypes.TOGGLE_TTS,\r\n    });\r\n  };\r\n\r\n  const toggleVibrations = () => {\r\n    dispatch({\r\n      type: actionTypes.TOGGLE_VIBRATIONS,\r\n    });\r\n  };\r\n\r\n  const handleVoiceChange = e => {\r\n    dispatch({\r\n      type: actionTypes.SET_SPEECH_SYNTH_SELECTED_VOICE_INDEX,\r\n      payload: e.target.value,\r\n    });\r\n    speak({\r\n      text: \"I will be telling you the exercise name\",\r\n      voice: settings.speechSynth.voices[e.target.value],\r\n    });\r\n  };\r\n\r\n  return (\r\n    <StyledWrapper>\r\n      <SEO title=\"Settings\" />\r\n      <Header>\r\n        <BackButtonContainer to=\"/\">\r\n          <IconButton aria-label=\"back to overview\">\r\n            <BackButton fontSize=\"large\" />\r\n          </IconButton>\r\n        </BackButtonContainer>\r\n        <span>Settings</span>\r\n      </Header>\r\n      <SettingsContainer>\r\n        <Row>\r\n          <SettingName>Vibrations</SettingName>\r\n          <Tooltip\r\n            open={!settings.vibrations}\r\n            title=\"Vibrate on start/end of the exercise\"\r\n            placement=\"left-end\"\r\n          >\r\n            <Switch\r\n              checked={settings.vibrations}\r\n              onChange={toggleVibrations}\r\n              disabled={\r\n                typeof window !== \"undefined\" &&\r\n                !window.navigator &&\r\n                !window.navigator.vibrate\r\n              }\r\n            />\r\n          </Tooltip>\r\n        </Row>\r\n        <Row>\r\n          <SettingName>Voice synth:</SettingName>\r\n          <Tooltip\r\n            open={!settings.speechSynth.supported}\r\n            title=\"Not supported in your browser\"\r\n            placement=\"left-end\"\r\n          >\r\n            <Switch\r\n              checked={settings.speechSynth.enabled}\r\n              onChange={toggleTTS}\r\n              disabled={\r\n                !settings.speechSynth.supported ||\r\n                !settings.speechSynth.voices.length\r\n              }\r\n            />\r\n          </Tooltip>\r\n        </Row>\r\n        {settings.speechSynth.enabled &&\r\n          settings.speechSynth.voices.length > 0 && (\r\n            <Row>\r\n              <SettingName>Language of speech:</SettingName>\r\n              <StyledSelect\r\n                value={settings.speechSynth.selectedVoiceIndex}\r\n                onChange={handleVoiceChange}\r\n              >\r\n                {settings.speechSynth.voices.map((voice, index) => (\r\n                  <MenuItem key={voice.voiceURI} value={index}>\r\n                    {voice.name}\r\n                  </MenuItem>\r\n                ))}\r\n              </StyledSelect>\r\n            </Row>\r\n          )}\r\n      </SettingsContainer>\r\n    </StyledWrapper>\r\n  );\r\n};\r\n\r\nexport default Settings;\r\n"],"sourceRoot":""}